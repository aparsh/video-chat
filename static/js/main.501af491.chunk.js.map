{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","name","setName","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","signal","isReceivedCall","Provider","value","answerCall","peer","Peer","initiator","trickle","data","emit","to","callUser","userToCall","console","log","leaveCall","destroy","window","location","reload","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","flexDirection","justifyContent","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","styles","display","Button","color","onClick","root","container","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDom","render","document","getElementById"],"mappings":"+RAIMA,EAAgBC,0BAGhBC,EAASC,aAAG,4CAEZC,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACVC,mBAAS,MADC,mBAC/BC,EAD+B,KACvBC,EADuB,OAElBF,mBAAS,IAFS,mBAE/BG,EAF+B,KAE3BC,EAF2B,OAGdJ,mBAAS,IAHK,mBAG/BK,EAH+B,KAGzBC,EAHyB,OAIdN,mBAAS,MAJK,mBAI/BO,EAJ+B,KAIzBC,EAJyB,OAKER,oBAAS,GALX,mBAK/BS,EAL+B,KAKjBC,EALiB,OAMJV,oBAAS,GANL,mBAM/BW,EAN+B,KAMpBC,EANoB,KAOhCC,EAAUC,mBACVC,EAAYD,mBACZE,EAAgBF,mBAEtBG,qBAAU,WACNC,UAAUC,aAAaC,aAAa,CAACC,OAAM,EAAKC,OAAM,IACrDC,MAAK,SAACC,GACHtB,EAAUsB,GACVX,EAAQY,QAAQC,UAAYF,KAIhC5B,EAAO+B,GAAG,MAAM,SAACC,GACbxB,EAAMwB,MAGVhC,EAAO+B,GAAG,YAAW,YAAyB,IAAvBE,EAAsB,EAAtBA,KAAKxB,EAAiB,EAAjBA,KAAKyB,EAAY,EAAZA,OAC7BtB,EAAQ,CAACuB,gBAAgB,EAAMF,OAAMxB,KAAMA,EAAMyB,gBAEvD,IAgDF,OACI,cAACpC,EAAcsC,SAAf,CAAwBC,MAAO,CAC3B1B,OACAE,eACAI,UACAE,YACAd,SACAI,OACAC,UACAK,YACAR,KACA+B,WAzDW,WACfxB,GAAgB,GAEhB,IAAMyB,EAAO,IAAIC,IAAK,CAAEC,WAAW,EAAOC,SAAS,EAAOrC,WAE1DkC,EAAKR,GAAG,UAAU,SAACY,GACf3C,EAAO4C,KAAK,aAAc,CAACV,OAAQS,EAAME,GAAIlC,EAAKsB,UAGtDM,EAAKR,GAAG,UAAU,SAACH,GACfT,EAAUU,QAAQC,UAAYF,KAGlCW,EAAKL,OAAOvB,EAAKuB,QAEjBd,EAAcS,QAAUU,GA2CpBO,SAxCS,SAACd,GACd,IAAMO,EAAO,IAAIC,IAAK,CAAEC,WAAW,EAAMC,SAAS,EAAOrC,WAGzDkC,EAAKR,GAAG,UAAU,SAACY,GACf3C,EAAO4C,KAAK,WAAY,CAACG,WAAYf,EAAIE,OAAQS,EAAMV,KAAM1B,EAAIE,YAGrE8B,EAAKR,GAAG,UAAU,SAACH,GACfT,EAAUU,QAAQC,UAAYF,KAGlC5B,EAAO+B,GAAG,gBAAgB,SAACG,GACvBpB,GAAgB,GAChBkC,QAAQC,IAAIf,GACZK,EAAKL,OAAOA,MAGhBd,EAAcS,QAAUU,GAuBpBW,UAnBU,WACdlC,GAAa,GACbI,EAAcS,QAAQsB,UACtBC,OAAOC,SAASC,WAIhB,SAcKnD,KC5FPoD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrChC,MAAM,aACFiC,MAAO,SACND,EAAME,YAAYC,KAAK,MAAQ,CAC5BF,MAAO,UAGfG,cAAc,aACVC,cAAe,MACfC,eAAgB,UACfN,EAAME,YAAYC,KAAK,MAAQ,CAC5BE,cAAe,WAGvBE,MAAO,CACHC,QAAS,OACTC,OAAQ,kBACRC,OAAQ,YAgCDC,EA1BK,WAAO,IAAD,EACsDC,qBAAWvE,GAA/EW,EADc,EACdA,KAAMI,EADQ,EACRA,aAAcI,EADN,EACMA,QAASE,EADf,EACeA,UAAWJ,EAD1B,EAC0BA,UAAWV,EADrC,EACqCA,OAAQM,EAD7C,EAC6CA,KAC7D2D,EAAUf,IAEhB,OACI,eAACgB,EAAA,EAAD,CAAMC,UAAWF,EAAQT,cAAzB,UACMxD,GACE,cAACoE,EAAA,EAAD,CAAOD,UAAWF,EAAQN,MAA1B,SACI,eAACO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SAAuCtE,GAAQ,SAC/C,uBAAOuE,aAAW,EAACC,OAAK,EAACC,IAAKjE,EAASkE,UAAQ,EAACX,UAAWF,EAAQ7C,aAI9EZ,IAAiBE,GACd,cAAC0D,EAAA,EAAD,CAAOD,UAAWF,EAAQN,MAA1B,SACI,eAACO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SAAuCpE,EAAKF,MAAQ,SACpD,uBAAOuE,aAAW,EAACE,IAAK/D,EAAWgE,UAAQ,EAACX,UAAWF,EAAQ7C,iB,SC3BxE2D,EAjBO,WAAO,IAAD,EACiBf,qBAAWvE,GAA7CwC,EADiB,EACjBA,WAAY3B,EADK,EACLA,KAAME,EADD,EACCA,aACzB,OACI,mCACKF,GAAQA,EAAKwB,iBAAmBtB,GAC7B,sBAAKwE,OAAQ,CAACC,QAAQ,OAAQvB,eAAe,UAA7C,UACKf,QAAQC,IAAItC,GACb,+BAAKA,EAAKF,KAAV,mBACA,cAAC8E,EAAA,EAAD,CAAQT,QAAQ,YAAYU,MAAM,UAAUC,QAASnD,EAArD,+B,qDCHdiB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiC,KAAM,CACFJ,QAAS,OACTxB,cAAe,UAEnBD,cAAc,aACVH,MAAO,QACND,EAAME,YAAYC,KAAK,MAAQ,CAC5BE,cAAe,WAGvB6B,UAAU,aACNjC,MAAO,QACPS,OAAQ,SACRF,QAAS,GACRR,EAAME,YAAYC,KAAK,MAAQ,CAC5BF,MAAO,QAGfS,OAAQ,CACJyB,UAAW,IAEf3B,QAAS,CACLA,QAAS,IAEbD,MAAO,CACHC,QAAS,YACTC,OAAQ,uBA6DD2B,EAxDC,SAAC,GAAkB,IAAhB1F,EAAe,EAAfA,SAAe,EAC8CkE,qBAAWvE,GAA/ES,EADsB,EACtBA,GAAIM,EADkB,EAClBA,aAAcJ,EADI,EACJA,KAAMC,EADF,EACEA,QAASK,EADX,EACWA,UAAWmC,EADtB,EACsBA,UAAWJ,EADjC,EACiCA,SADjC,EAEE1C,mBAAS,IAFX,mBAEvB0F,EAFuB,KAEbC,EAFa,KAGxBzB,EAAUf,IAEhB,OACI,cAACyC,EAAA,EAAD,CAAWxB,UAAWF,EAAQqB,UAA9B,SACI,eAAClB,EAAA,EAAD,CAAOwB,UAAW,GAAIzB,UAAWF,EAAQN,MAAzC,UACI,sBAAMQ,UAAWF,EAAQoB,KAAMQ,YAAU,EAACC,aAAa,MAAvD,SACI,eAAC5B,EAAA,EAAD,CAAMoB,WAAS,EAACnB,UAAWF,EAAQT,cAAnC,UACI,eAACU,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWF,EAAQL,QAA7C,UACI,cAACY,EAAA,EAAD,CAAYE,cAAY,EAACD,QAAQ,KAAjC,0BACA,cAACsB,EAAA,EAAD,CAAWC,MAAM,OAAOhE,MAAO5B,EAAM6F,SAAU,SAACC,GAAQ7F,EAAQ6F,EAAEC,OAAOnE,QAAUoE,WAAS,IAC5F,cAAC,kBAAD,CAAiBC,KAAMnG,EAAIiE,UAAWF,EAAQH,OAA9C,SACI,cAACoB,EAAA,EAAD,CACIT,QAAQ,YACRU,MAAM,UACNiB,WAAS,EACTE,UAAW,cAACC,EAAA,EAAD,CAAYC,SAAS,UAJpC,+BASR,eAACtC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWF,EAAQL,QAA7C,UACI,cAACY,EAAA,EAAD,CAAYE,cAAY,EAACD,QAAQ,KAAjC,uBACA,cAACsB,EAAA,EAAD,CAAWC,MAAM,aAAahE,MAAOyD,EAAUQ,SAAU,SAACC,GAAQR,EAAYQ,EAAEC,OAAOnE,QAAUoE,WAAS,IACzG5F,IAAiBE,EACd,cAACwE,EAAA,EAAD,CACIT,QAAQ,YACRU,MAAM,QACNiB,WAAS,EACTE,UAAW,cAACG,EAAA,EAAD,CAAeD,SAAS,UACnCpB,QAASvC,EACTsB,UAAWF,EAAQH,OANvB,qBAUA,cAACoB,EAAA,EAAD,CACIT,QAAQ,YACRU,MAAM,UACNiB,WAAS,EACTE,UAAW,cAACI,EAAA,EAAD,CAAOF,SAAS,UAC3BpB,QAAS,kBAAM3C,EAASgD,IACxBtB,UAAWF,EAAQH,OANvB,0BAafhE,QCnFXoD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuD,OAAO,aACHC,aAAc,GACd9C,OAAQ,aACRmB,QAAS,OACTxB,cAAe,MACfC,eAAgB,SAChBmD,WAAY,SACZxD,MAAO,QACPQ,OAAQ,mBAEPT,EAAME,YAAYC,KAAK,MAAQ,CAC5BF,MAAO,QAGfyD,MAAO,CACHC,WAAY,QAEhBC,QAAS,CACL/B,QAAS,OACTxB,cAAe,SACfoD,WAAY,SACZxD,MAAO,YAqBA4D,EAjBH,WACR,IAAMhD,EAAUf,IAChB,OACI,sBAAKiB,UAAWF,EAAQ+C,QAAxB,UACI,cAACE,EAAA,EAAD,CAAQ/C,UAAWF,EAAQ0C,OAAQQ,SAAS,SAAShC,MAAM,UAA3D,SACI,cAACX,EAAA,EAAD,CAAYC,QAAQ,KAAK2C,MAAM,SAA/B,0BAEJ,cAAC,EAAD,IAEA,cAAC,EAAD,UACI,cAAC,EAAD,U,OCrChBC,IAASC,OACL,cAAC,EAAD,UACI,cAAC,EAAD,MAENC,SAASC,eAAe,W","file":"static/js/main.501af491.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\n// const socket = io('http://localhost:5000');\nconst socket = io('https://video-chat-aparsh.herokuapp.com/');\n\nconst ContextProvider = ({ children }) => {\n    const [stream, setStream] = useState(null)\n    const [me, setMe] = useState('')\n    const [name, setName] = useState('')\n    const [call, setCall] = useState(null)\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({video:true,audio:true})\n        .then((currentStream) => {\n            setStream(currentStream);\n            myVideo.current.srcObject = currentStream;\n        })\n\n\n        socket.on('me', (id) => {\n            setMe(id);\n        })\n\n        socket.on('callUser',({from,name,signal}) => {\n            setCall({isReceivedCall: true, from, name: name, signal});\n        })\n    },[]);\n\n    const answerCall = () => {\n        setCallAccepted(true);\n\n        const peer = new Peer({ initiator: false, trickle: false, stream})\n\n        peer.on('signal', (data)=>{\n            socket.emit('answerCall', {signal: data, to: call.from})\n        })\n\n        peer.on('stream', (currentStream) => {\n            userVideo.current.srcObject = currentStream;\n        })\n\n        peer.signal(call.signal)\n\n        connectionRef.current = peer;\n    }\n\n    const callUser = (id) => {\n        const peer = new Peer({ initiator: true, trickle: false, stream})\n\n\n        peer.on('signal', (data)=>{\n            socket.emit('callUser', {userToCall: id, signal: data, from: me, name})\n        })\n\n        peer.on('stream', (currentStream) => {\n            userVideo.current.srcObject = currentStream;\n        })\n\n        socket.on('callAccepted', (signal) => {\n            setCallAccepted(true);\n            console.log(signal)\n            peer.signal(signal);\n        })\n\n        connectionRef.current = peer;\n        \n    }\n\n    const leaveCall = () => {\n        setCallEnded(true);\n        connectionRef.current.destroy();\n        window.location.reload();\n    }\n\n    return(\n        <SocketContext.Provider value={{\n            call,\n            callAccepted,\n            myVideo,\n            userVideo,\n            stream,\n            name,\n            setName,\n            callEnded,\n            me,\n            answerCall,\n            callUser,\n            leaveCall\n        }}>\n            {children}\n        </SocketContext.Provider>\n    )\n}\n\nexport {ContextProvider, SocketContext};","import React, { useContext } from 'react'\nimport { Grid, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SocketContext } from '../SocketContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    video: {\n        width: '550px',\n        [theme.breakpoints.down('xs')]: {\n            width: '300px',\n        },\n    },\n    gridContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    paper: {\n        padding: '10px',\n        border: '2px solid black',\n        margin: '10px',\n    },\n}));\n\n\n\nconst VideoPlayer = () => {\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n    const classes = useStyles();\n\n    return (\n        <Grid className={classes.gridContainer}>\n            { stream && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\n                        <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n            {callAccepted && !callEnded && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\n                        <video playsInline ref={userVideo} autoPlay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n        </Grid>\n    )\n}\n\nexport default VideoPlayer\n","import React, { useContext } from 'react'\nimport { Button } from '@material-ui/core'\nimport { SocketContext } from '../SocketContext'\nconst Notifications = () => {\n    const {answerCall, call, callAccepted} = useContext(SocketContext)\n    return (\n        <>\n            {call && call.isReceivedCall && !callAccepted && (\n                <div styles={{display:\"flex\", justifyContent:\"center\"}}>\n                    {console.log(call)}\n                    <h1>{call.name} is calling!!</h1>\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n                        Answer call\n                    </Button>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default Notifications\n","import React, { useContext, useState } from 'react'\nimport { Grid, Typography, TextField, Button, Container, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { SocketContext } from '../SocketContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    gridContainer: {\n        width: '100%',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    container: {\n        width: '600px',\n        margin: '35px 0',\n        padding: 0,\n        [theme.breakpoints.down('xs')]: {\n            width: '80%',\n        },\n    },\n    margin: {\n        marginTop: 20,\n    },\n    padding: {\n        padding: 20,\n    },\n    paper: {\n        padding: '10px 20px',\n        border: '2px solid black',\n    },\n}));\n\n\nconst Options = ({ children }) => {\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n    const [idToCall, setIdToCall] = useState('');\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.container}>\n            <Paper elevation={10} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                    <Grid container className={classes.gridContainer}>\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Account Info</Typography>\n                            <TextField label=\"Name\" value={name} onChange={(e) => { setName(e.target.value) }} fullWidth />\n                            <CopyToClipboard text={me} className={classes.margin}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    startIcon={<Assignment fontSize=\"large\" />}>\n                                    Copy your ID\n                                </Button>\n                            </CopyToClipboard>\n                        </Grid>\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Make call</Typography>\n                            <TextField label=\"ID to call\" value={idToCall} onChange={(e) => { setIdToCall(e.target.value) }} fullWidth />\n                            {callAccepted && !callEnded ? (\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"error\"\n                                    fullWidth\n                                    startIcon={<PhoneDisabled fontSize=\"large\" />}\n                                    onClick={leaveCall}\n                                    className={classes.margin}>\n                                    Hang up\n                                </Button>\n                            ) : (\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"success\"\n                                    fullWidth\n                                    startIcon={<Phone fontSize=\"large\" />}\n                                    onClick={() => callUser(idToCall)}\n                                    className={classes.margin}>\n                                    Call\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </form>\n                {children}\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Options\n","import React from 'react'\nimport { Typography, AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VideoPlayer from './components/VideoPlayer';\nimport Notifications from './components/Notifications';\nimport Options from './components/Options';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 100px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '600px',\n        border: '2px solid black',\n\n        [theme.breakpoints.down('xs')]: {\n            width: '90%',\n        },\n    },\n    image: {\n        marginLeft: '15px',\n    },\n    wrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.wrapper}>\n            <AppBar className={classes.appBar} position=\"static\" color='inherit'>\n                <Typography variant='h2' align='center'>Video Chat</Typography>\n            </AppBar>\n            <VideoPlayer />\n            {/**Video Player */}\n            <Options>\n                <Notifications />\n            </Options>\n            {/**Options */}\n        </div>\n    )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport './styles.css';\nimport { ContextProvider } from './SocketContext';\n\nReactDom.render(\n    <ContextProvider>\n        <App />\n    </ContextProvider>\n, document.getElementById('root'));\n"],"sourceRoot":""}